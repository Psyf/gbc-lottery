/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LotteryHouseKeeping,
  LotteryHouseKeepingInterface,
} from "../../contracts/LotteryHouseKeeping";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_randomizer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fundRandomizer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomizer",
    outputs: [
      {
        internalType: "contract IRandomizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawRandomizer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620013ab380380620013ab83398181016040528101906200003c919062000276565b8282816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a3505080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600381905550505050620002d2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f982620001cc565b9050919050565b6200020b81620001ec565b81146200021757600080fd5b50565b6000815190506200022b8162000200565b92915050565b60006200023e82620001ec565b9050919050565b620002508162000231565b81146200025c57600080fd5b50565b600081519050620002708162000245565b92915050565b600080600060608486031215620002925762000291620001c7565b5b6000620002a2868287016200021a565b9350506020620002b5868287016200025f565b9250506040620002c8868287016200021a565b9150509250925092565b6110c980620002e26000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063aa60e73311610066578063aa60e7331461010c578063bf7e214f14610128578063c03634ff14610146578063f10fb58414610162578063f2fde38b1461018057610093565b80634846ed9a1461009857806375172a8b146100b45780637a9e5e4b146100d25780638da5cb5b146100ee575b600080fd5b6100b260048036038101906100ad9190610b0e565b61019c565b005b6100bc61034c565b6040516100c99190610b4a565b60405180910390f35b6100ec60048036038101906100e79190610bd5565b610352565b005b6100f6610513565b6040516101039190610c11565b60405180910390f35b61012660048036038101906101219190610b0e565b610537565b005b6101306106d3565b60405161013d9190610c8b565b60405180910390f35b610160600480360381019061015b9190610b0e565b6106f9565b005b61016a610865565b6040516101779190610cc7565b60405180910390f35b61019a60048036038101906101959190610d0e565b61088b565b005b6101ca336000357fffffffff0000000000000000000000000000000000000000000000000000000016610995565b610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090610d98565b60405180910390fd5b60016002541461024e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024590610e04565b60405180910390fd5b6002808190555080600354101561029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610e70565b60405180910390fd5b80600360008282546102ac9190610ebf565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634ffd2e4382306040518363ffffffff1660e01b815260040161030f9190610c11565b6000604051808303818588803b15801561032857600080fd5b505af115801561033c573d6000803e3d6000fd5b5050505050600160028190555050565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061046c5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b700961333306000357fffffffff00000000000000000000000000000000000000000000000000000000166040518463ffffffff1660e01b815260040161042a93929190610f2e565b602060405180830381865afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b9190610f9d565b5b61047557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a350565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610565336000357fffffffff0000000000000000000000000000000000000000000000000000000016610995565b6105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90610d98565b60405180910390fd5b6001600254146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090610e04565b60405180910390fd5b60028081905550806003541015610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90610e70565b60405180910390fd5b80600360008282546106479190610ebf565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050509050806106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be90611016565b60405180910390fd5b50600160028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610727336000357fffffffff0000000000000000000000000000000000000000000000000000000016610995565b610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d90610d98565b60405180910390fd5b6001600254146107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290610e04565b60405180910390fd5b6002808190555080600360008282546107c49190611036565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632465f8f530836040518363ffffffff1660e01b815260040161082892919061106a565b600060405180830381600087803b15801561084257600080fd5b505af1158015610856573d6000803e3d6000fd5b50505050600160028190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108b9336000357fffffffff0000000000000000000000000000000000000000000000000000000016610995565b6108f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ef90610d98565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7457508073ffffffffffffffffffffffffffffffffffffffff1663b70096138530866040518463ffffffff1660e01b8152600401610a3293929190610f2e565b602060405180830381865afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a739190610f9d565b5b80610aca575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b600080fd5b6000819050919050565b610aeb81610ad8565b8114610af657600080fd5b50565b600081359050610b0881610ae2565b92915050565b600060208284031215610b2457610b23610ad3565b5b6000610b3284828501610af9565b91505092915050565b610b4481610ad8565b82525050565b6000602082019050610b5f6000830184610b3b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b9082610b65565b9050919050565b6000610ba282610b85565b9050919050565b610bb281610b97565b8114610bbd57600080fd5b50565b600081359050610bcf81610ba9565b92915050565b600060208284031215610beb57610bea610ad3565b5b6000610bf984828501610bc0565b91505092915050565b610c0b81610b85565b82525050565b6000602082019050610c266000830184610c02565b92915050565b6000819050919050565b6000610c51610c4c610c4784610b65565b610c2c565b610b65565b9050919050565b6000610c6382610c36565b9050919050565b6000610c7582610c58565b9050919050565b610c8581610c6a565b82525050565b6000602082019050610ca06000830184610c7c565b92915050565b6000610cb182610c58565b9050919050565b610cc181610ca6565b82525050565b6000602082019050610cdc6000830184610cb8565b92915050565b610ceb81610b85565b8114610cf657600080fd5b50565b600081359050610d0881610ce2565b92915050565b600060208284031215610d2457610d23610ad3565b5b6000610d3284828501610cf9565b91505092915050565b600082825260208201905092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b6000610d82600c83610d3b565b9150610d8d82610d4c565b602082019050919050565b60006020820190508181036000830152610db181610d75565b9050919050565b7f5245454e5452414e435900000000000000000000000000000000000000000000600082015250565b6000610dee600a83610d3b565b9150610df982610db8565b602082019050919050565b60006020820190508181036000830152610e1d81610de1565b9050919050565b7f496e73756666696369656e742072657365727665730000000000000000000000600082015250565b6000610e5a601583610d3b565b9150610e6582610e24565b602082019050919050565b60006020820190508181036000830152610e8981610e4d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eca82610ad8565b9150610ed583610ad8565b9250828203905081811115610eed57610eec610e90565b5b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f2881610ef3565b82525050565b6000606082019050610f436000830186610c02565b610f506020830185610c02565b610f5d6040830184610f1f565b949350505050565b60008115159050919050565b610f7a81610f65565b8114610f8557600080fd5b50565b600081519050610f9781610f71565b92915050565b600060208284031215610fb357610fb2610ad3565b5b6000610fc184828501610f88565b91505092915050565b7f4661696c656420746f2073656e64207377656570000000000000000000000000600082015250565b6000611000601483610d3b565b915061100b82610fca565b602082019050919050565b6000602082019050818103600083015261102f81610ff3565b9050919050565b600061104182610ad8565b915061104c83610ad8565b925082820190508082111561106457611063610e90565b5b92915050565b600060408201905061107f6000830185610c02565b61108c6020830184610b3b565b939250505056fea2646970667358221220a888c4c40afdd4d66908a95714a4ab7407837f9df873a90da0208e0e0ba9ed5364736f6c63430008110033";

type LotteryHouseKeepingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryHouseKeepingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryHouseKeeping__factory extends ContractFactory {
  constructor(...args: LotteryHouseKeepingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    _randomizer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LotteryHouseKeeping> {
    return super.deploy(
      _owner,
      _authority,
      _randomizer,
      overrides || {}
    ) as Promise<LotteryHouseKeeping>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    _randomizer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _authority,
      _randomizer,
      overrides || {}
    );
  }
  override attach(address: string): LotteryHouseKeeping {
    return super.attach(address) as LotteryHouseKeeping;
  }
  override connect(signer: Signer): LotteryHouseKeeping__factory {
    return super.connect(signer) as LotteryHouseKeeping__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryHouseKeepingInterface {
    return new utils.Interface(_abi) as LotteryHouseKeepingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryHouseKeeping {
    return new Contract(address, _abi, signerOrProvider) as LotteryHouseKeeping;
  }
}
